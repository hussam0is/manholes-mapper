// i18n module extracted for reuse across files
export const i18n = {
  he: {
    appTitle: 'ממפה שוחות',
    modeNode: 'שוחה',
    modeHome: 'בית',
    modeDrainage: 'קולטן',
    modeEdge: 'קו',
    home: 'בית',
    drainage: 'קולטן',
    newSketch: 'שרטוט חדש',
    zoomIn: 'הגדל זום',
    zoomOut: 'הקטן זום',
    sizeIncrease: 'הגדל גודל',
    sizeDecrease: 'הקטן גודל',
    exportSketch: 'יצוא שרטוט',
    importSketch: 'יבוא שרטוט',
    exportNodes: 'יצוא שוחות',
    exportEdges: 'יצוא קווים',
    save: 'שמירה',
    autosave: 'שמירה אוטומטית',
    help: 'עזרה',
    cancel: 'ביטול',
    start: 'התחל',
    close: 'סגור',
    recenter: 'מרכז שרטוט',
    searchNode: 'חפש שוחה...',
    searchNodeTitle: 'חפש שוחה לפי מספר',
    language: 'שפה',
    menu: 'תפריט',
    floatingKeyboard: 'מקלדת צפה',
    sidebarTitle: 'פרטים',
    detailsDefault: 'בחר שוחה או קו כדי לערוך.',
    startTitle: 'התחלת שרטוט חדש',
    creationDate: 'תאריך יצירה',
    homeTitle: 'השרטוטים שלי',
    createFromHome: 'שרטוט חדש',
    helpTitle: 'טיפים וקיצורי מקשים',
    helpLines: [
      'N: מצב שוחה',
      'E: מצב קו',
      '= / - : זום פנימה / החוצה (0 לאיפוס)',
      'גלגלת עכבר מעל הקנבס: זום',
      'Esc: ביטול פעולה או ניקוי בחירה',
      'Delete/Backspace: מחיקת פריט נבחר',
    ],
    helpNote: 'במצב קו, בחר שוחת מקור ואז שוחת יעד.',
    listUpdated: (d) => `עודכן ${d}`,
    listCounts: (n, e) => `שוחות: ${n}, קווים: ${e}`,
    listTitle: (id, date) => `שרטוט ${id} • ${date}`,
    listOpen: 'פתח',
    listDuplicate: 'שכפל',
    listDelete: 'מחק',
    noSketches: 'אין עדיין שרטוטים.',
    toasts: {
      nodeMode: 'מצב שוחה',
      edgeMode: 'מצב קו',
      startNew: 'מתחיל שרטוט חדש',
      createdNew: 'נוצר שרטוט חדש',
      cancelled: 'בוטל',
      opened: 'השרטוט נפתח',
      duplicated: 'שוכפל',
      deleted: 'נמחק',
      saved: 'נשמר',
      autosaveOn: 'שמירה אוטומטית פעילה',
      autosaveOff: 'שמירה אוטומטית כבויה',
      chooseTarget: 'בחר שוחת יעד',
      edgeCreated: 'נוצר קו',
      edgeCancelled: 'בוטל יצירת קו',
      zoom: (p) => `זום: ${p}%`,
      sizeChanged: (p) => `גודל: ${p}%`,
      nodesExported: 'שוחות יוצאו',
      edgesExported: 'קווים יוצאו',
      sketchExported: 'שרטוט יוצא',
      sketchImported: 'שרטוט יובא בהצלחה',
      nodeDeleted: 'השוחה נמחקה',
      edgeDeleted: 'הקו נמחק',
      edgeExists: 'כבר קיים קו בין השוחות הללו',
      offline: 'אתה במצב לא מקוון',
      online: 'חזרת למצב מקוון',
      refreshBlockedOffline: 'אין רשת — הרענון נחסם כדי למנוע אובדן עבודה',
      nodeFound: (id) => `שוחה ${id} נמצאה`,
      nodeNotFound: (id) => `שוחה ${id} לא נמצאה`,
    },
    renamed: 'שם עודכן',
    confirms: {
      newClears: 'התחלת שרטוט חדש תמחק את השרטוט הנוכחי. להמשיך?',
      deleteSketch: 'למחוק שרטוט זה?',
      deleteNodeWithEdges: 'למחוק שוחה זו ואת כל הקווים המחוברים אליה?',
      deleteSelectedEdge: 'למחוק את הקו שנבחר?',
      deleteEdge: 'למחוק קו זה?',
    },
    alerts: {
      pickDate: 'נא לבחור תאריך לשירטוט החדש.',
      noNodesToExport: 'אין שוחות ליצוא.',
      noEdgesToExport: 'אין קווים ליצוא.',
      noSketchToExport: 'אין שרטוט ליצוא.',
      exportFailed: 'שגיאה ביצוא השרטוט.',
      importFailed: 'שגיאה ביבוא השרטוט',
      confirmImportReplace: 'יבוא שרטוט ידרוס את השרטוט הנוכחי. להמשיך?',
      nodeIdUnique: 'מספר השוחה חייב להיות ייחודי.',
    },
    labels: {
      nodeId: 'מספר שוחה',
      note: 'הערה',
      notePlaceholder: 'הכנס הערה/תיאור',
      nodeType: 'Manhole/Home',
      coverMaterial: 'חומר מכסה',
      coverDiameter: 'קוטר מכסה',
      access: 'אמצעי ירידה',
      accuracyLevel: 'רמת דיוק',
      maintenanceStatus: 'סטטוס תחזוקה',
      nodeEngineeringStatus: 'סטטוס הנדסי',
      indicator: 'סימון',
      indicatorOk: 'תקין',
      indicatorMissing: 'חסר מדידה',
      deleteNode: 'מחק שוחה',
      fromNode: 'משוחה',
      toNode: 'לשוחה',
      edgeType: 'סוג קו',
      edgeMaterial: 'חומר קו',
      tailMeasure: 'קו יוצא משוחה',
      headMeasure: 'קו נכנס לשוחה',
      fallDepth: 'עומק מפל',
      fallPosition: 'מפל פנימי/חיצוני',
      lineDiameter: 'קוטר קו',
      engineeringStatus: 'סטטוס הנדסי',
      optional: 'לא חובה',
      targetNote: 'הערת שוחת יעד',
      deleteEdge: 'מחק קו',
    },
    admin: {
      manage: 'ניהול',
      title: 'הגדרות מנהל',
      saveSettings: 'שמור הגדרות',
      import: 'יבא',
      export: 'יצא',
      importSuccess: 'הגדרות יובאו',
      importInvalid: 'קובץ ייבוא לא חוקי',
      exportSuccess: 'הגדרות יוצאו',
      tabNodes: 'שוחות/בתים',
      tabEdges: 'קווים',
      includeTitle: 'שדות ליצוא CSV',
      includeDesc: 'בחר אילו שדות יופיעו בקובץ ה‑CSV.',
      defaultsTitle: 'ברירות מחדל',
      defaultsDesc: 'קבע ערכים שיוקצו אוטומטית בעת יצירה.',
      optionsTitle: (label) => `אפשרויות – ${label}`,
      optionsDesc: 'נהל רשימות לבחירה (dropdown). סמן אילו מופיעות באפליקציה.',
      customTitle: 'שדות מותאמים',
      customDesc: 'הוסף שדות משלך לטופס ול‑CSV.',
      thEnabled: 'בשימוש',
      thLabel: 'תווית',
      thCode: 'קוד',
      addOption: 'הוסף אפשרות',
      delete: 'מחק',
      addField: 'הוסף שדה',
      editOptions: 'אפשרויות…',
      saved: 'הגדרות נשמרו',
      placeholders: {
        defaultValue: 'הזן ערך ברירת מחדל...',
        newLabel: 'הזן תווית חדשה...',
        code: 'קוד',
        key: 'מפתח',
        label: 'תווית',
      },
      fieldTypes: {
        text: 'טקסט',
        number: 'מספר',
        select: 'רשימה',
      },
      showInForm: 'הצג בטופס',
      includeInCsv: 'כלול ב-CSV',
      confirmDeleteOption: 'האם אתה בטוח שברצונך למחוק אפשרות זו?',
      editOptionsPrompt: 'ערוך אפשרויות (שורה לכל ערך: enabled|label|code)',
    },
  },
  en: {
    appTitle: 'Manhole Mapper',
    modeNode: 'Manhole',
    modeHome: 'Home',
    modeDrainage: 'Drainage',
    modeEdge: 'Line',
    home: 'Home',
    drainage: 'Drainage',
    newSketch: 'New Sketch',
    zoomIn: 'Zoom in',
    zoomOut: 'Zoom out',
    sizeIncrease: 'Increase size',
    sizeDecrease: 'Decrease size',
    exportSketch: 'Export Sketch',
    importSketch: 'Import Sketch',
    exportNodes: 'Export Nodes',
    exportEdges: 'Export Edges',
    save: 'Save',
    autosave: 'Autosave',
    help: 'Help',
    cancel: 'Cancel',
    start: 'Start',
    close: 'Close',
    recenter: 'Recenter sketch',
    floatingKeyboard: 'Floating Keyboard',
    searchNode: 'Search node...',
    searchNodeTitle: 'Search node by ID',
    language: 'Language',
    menu: 'Menu',
    sidebarTitle: 'Details',
    detailsDefault: 'Select a node or edge to edit.',
    startTitle: 'Start New Sketch',
    creationDate: 'Creation Date',
    homeTitle: 'My Sketches',
    createFromHome: 'New Sketch',
    helpTitle: 'Tips & Shortcuts',
    helpLines: [
      'N: Node mode',
      'E: Edge mode',
      '= / - : Zoom in / out (0 to reset)',
      'Mouse Wheel over canvas: Zoom',
      'Esc: Cancel or clear selection',
      'Delete/Backspace: Delete selected',
    ],
    helpNote: 'In Edge mode, pick source node then target node.',
    listUpdated: (d) => `Updated ${d}`,
    listCounts: (n, e) => `Nodes: ${n}, Edges: ${e}`,
    listTitle: (id, date) => `Sketch ${id} • ${date}`,
    listOpen: 'Open',
    listDuplicate: 'Duplicate',
    listDelete: 'Delete',
    noSketches: 'No sketches yet.',
    toasts: {
      nodeMode: 'Node mode',
      edgeMode: 'Edge mode',
      startNew: 'Starting new sketch',
      createdNew: 'New sketch created',
      cancelled: 'Cancelled',
      opened: 'Sketch opened',
      duplicated: 'Duplicated',
      deleted: 'Deleted',
      saved: 'Saved',
      autosaveOn: 'Autosave ON',
      autosaveOff: 'Autosave OFF',
      chooseTarget: 'Choose target node',
      edgeCreated: 'Edge created',
      edgeCancelled: 'Edge creation cancelled',
      zoom: (p) => `Zoom: ${p}%`,
      sizeChanged: (p) => `Size: ${p}%`,
      nodesExported: 'Nodes exported',
      edgesExported: 'Edges exported',
      sketchExported: 'Sketch exported',
      sketchImported: 'Sketch imported successfully',
      nodeDeleted: 'Node deleted',
      edgeDeleted: 'Edge deleted',
      edgeExists: 'An edge between these nodes already exists',
      offline: 'You are offline',
      online: 'Back online',
      refreshBlockedOffline: 'Offline — refresh blocked to avoid losing work',
      nodeFound: (id) => `Node ${id} found`,
      nodeNotFound: (id) => `Node ${id} not found`,
    },
    renamed: 'Renamed',
    confirms: {
      newClears: 'Starting a new sketch will clear the current one. Continue?',
      deleteSketch: 'Delete this sketch?',
      deleteNodeWithEdges: 'Delete this node and its connected edges?',
      deleteSelectedEdge: 'Delete selected edge?',
      deleteEdge: 'Delete this edge?',
    },
    alerts: {
      pickDate: 'Please select a date for the new sketch.',
      noNodesToExport: 'There are no nodes to export.',
      noEdgesToExport: 'There are no edges to export.',
      noSketchToExport: 'There is no sketch to export.',
      exportFailed: 'Error exporting sketch.',
      importFailed: 'Error importing sketch',
      confirmImportReplace: 'Importing a sketch will replace the current sketch. Continue?',
      nodeIdUnique: 'Node ID must be unique.',
    },
    labels: {
      nodeId: 'Node ID',
      note: 'Note',
      notePlaceholder: 'Enter note/description',
      nodeType: 'Manhole/Home',
      coverMaterial: 'Cover material',
      coverDiameter: 'Cover diameter',
      access: 'Access',
      accuracyLevel: 'Accuracy level',
      maintenanceStatus: 'Maintenance status',
      nodeEngineeringStatus: 'Engineering status',
      indicator: 'Indicator',
      indicatorOk: 'OK',
      indicatorMissing: 'Missing measurement',
      deleteNode: 'Delete Node',
      fromNode: 'From',
      toNode: 'To',
      edgeType: 'Edge type',
      edgeMaterial: 'Edge material',
      tailMeasure: 'Outgoing line',
      headMeasure: 'Incoming line',
      fallDepth: 'Fall depth',
      fallPosition: 'Fall position',
      lineDiameter: 'Line diameter',
      engineeringStatus: 'Engineering status',
      optional: 'Optional',
      targetNote: 'Target node note',
      deleteEdge: 'Delete Edge',
    },
    admin: {
      manage: 'Admin',
      title: 'Admin Settings',
      saveSettings: 'Save Settings',
      import: 'Import',
      export: 'Export',
      importSuccess: 'Settings imported',
      importInvalid: 'Invalid import file',
      exportSuccess: 'Settings exported',
      tabNodes: 'Nodes/Homes',
      tabEdges: 'Edges',
      includeTitle: 'Fields to export (CSV)',
      includeDesc: 'Choose which fields appear in the CSV export.',
      defaultsTitle: 'Defaults',
      defaultsDesc: 'Set values applied automatically on creation.',
      optionsTitle: (label) => `Options – ${label}`,
      optionsDesc: 'Manage dropdown lists. Check which values appear in the app.',
      customTitle: 'Custom fields',
      customDesc: 'Add your own fields for the form and CSV.',
      thEnabled: 'Enabled',
      thLabel: 'Label',
      thCode: 'Code',
      addOption: 'Add option',
      delete: 'Delete',
      addField: 'Add field',
      editOptions: 'Options…',
      saved: 'Settings saved',
      placeholders: {
        defaultValue: 'Enter default value...',
        newLabel: 'Enter new label...',
        code: 'Code',
        key: 'Key',
        label: 'Label',
      },
      fieldTypes: {
        text: 'Text',
        number: 'Number',
        select: 'Select',
      },
      showInForm: 'Show in form',
      includeInCsv: 'Include in CSV',
      confirmDeleteOption: 'Are you sure you want to delete this option?',
      editOptionsPrompt: 'Edit options (one per line: enabled|label|code)',
    },
  },
};

export function isRTL(lang) {
  return lang === 'he';
}

export function createTranslator(dictRef, getLang) {
  return function t(path, ...args) {
    const dict = dictRef[getLang()];
    const segs = path.split('.');
    let value = dict;
    for (const s of segs) value = value && value[s];
    if (typeof value === 'function') return value(...args);
    return value != null ? value : path;
  };
}

